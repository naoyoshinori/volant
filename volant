#!/bin/sh

VERSION=0.0.2
DEVICE_NAME=volant

volant_init()
{
  local container=$1
  local ephemeral=$2
  local host_dir=$3
  local guest_dir=$4
  local image=$5

  volant_exists $container

  if [ $? -eq 0 ]; then
    echo "Container already exists."
    return 1
  fi

  lxc init $image $container

  if [ $? -ne 0 ]; then
    return 1
  fi

  lxc snapshot $container

  lxc copy $container $ephemeral -e

  volant_device_add $ephemeral $host_dir $guest_dir
}

volant_delete()
{
  local container=$1
  local ephemeral=$2
  local host_dir=$3
  local guest_dir=$4

  volant_exists $container

  if [ $? -ne 0 ]; then
    echo "There is no container."
    return 1
  fi

  lxc delete $container
  lxc delete $ephemeral
}

volant_start()
{
  local container=$1
  local ephemeral=$2
  local host_dir=$3
  local guest_dir=$4

  volant_exists $container

  if [ $? -ne 0 ]; then
    echo "There is no container."
    return 1
  fi

  local status=`volant_status $container $ephemeral`

  if [ "$status" = "RUNNING" ]; then
    echo "Container has already started."
    return 0
  fi

  lxc start $ephemeral
}

volant_stop()
{
  local container=$1
  local ephemeral=$2
  local host_dir=$3
  local guest_dir=$4

  volant_exists $container

  if [ $? -ne 0 ]; then
    echo "There is no container."
    return 1
  fi

  local status=`volant_status $container $ephemeral`

  if [ "$status" = "STOPPED" ]; then
    echo "Container has already stopped."
    return 0
  fi

  lxc stop $ephemeral

  lxc copy $container $ephemeral -e

  volant_device_add $ephemeral $host_dir $guest_dir
}

volant_status()
{
  local container=$1
  local ephemeral=$2

  volant_exists $container

  if [ $? -ne 0 ]; then
    echo "There is no container."
    return 1
  fi

  lxc list $ephemeral --format csv -c s
}

volant_run()
{
  local container=$1
  local ephemeral=$2
  local host_dir=$3
  local guest_dir=$4
  local volantfile=$5

  volant_exists $container

  if [ $? -ne 0 ]; then
    echo "There is no container."
    return 1
  fi

  local status=`volant_status $container $ephemeral`

  if [ "$status" = "STOPPED" ]; then
    volant_start $container $ephemeral $host_dir $guest_dir
    sleep 5
  fi

  lxc exec $ephemeral -- bash -c "cd $guest_dir; bash $volantfile"
}

volant_exec()
{
  local container=$1
  local ephemeral=$2
  local host_dir=$3
  local guest_dir=$4
  shift 4

  volant_exists $container

  if [ $? -ne 0 ]; then
    echo "There is no container."
    return 1
  fi

  local status=`volant_status $container $ephemeral`

  if [ "$status" = "STOPPED" ]; then
    volant_start $container $ephemeral $host_dir $guest_dir
    sleep 5
  fi

  lxc exec $ephemeral -- bash -c "cd $guest_dir; exec $*"
}

volant_save()
{
  local container=$1
  local ephemeral=$2
  local host_dir=$3
  local guest_dir=$4

  volant_exists $container

  if [ $? -ne 0 ]; then
    echo "There is no container."
    return 1
  fi

  local status=`volant_status $container $ephemeral`

  if [ "$status" = "STOPPED" ]; then
    echo "Container is stopped."
    return 1
  fi

  local new_container=vm-`date | md5sum | awk '{print substr($1, 0, 9)}'`

  volant_device_remove $ephemeral $host_dir $guest_dir

  lxc copy $ephemeral $new_container

  volant_device_add $ephemeral $host_dir $guest_dir

  lxc delete $container

  echo $new_container > .cache/name
}

volant_commit()
{
  local container=$1
  local ephemeral=$2
  local host_dir=$3
  local guest_dir=$4

  volant_exists $container

  if [ $? -ne 0 ]; then
    echo "There is no container."
    return 1
  fi

  lxc snapshot $container
}

volant_rollback()
{
  local container=$1
  local ephemeral=$2
  local host_dir=$3
  local guest_dir=$4

  volant_exists $container

  if [ $? -ne 0 ]; then
    echo "There is no container."
    return 1
  fi

  local cnt=`lxc info $container | grep -E 'snap[0-9]+' | awk '{print $1}' | wc -w`

  if [ $cnt -lt 2 ]; then
    echo "I can not roll back any more."
    return 1
  fi

  local revision=`lxc info $container | grep -E 'snap[0-9]+' | tail -n 1 | awk '{print $1}'`

  lxc delete $container/$revision

  local revision=`lxc info $container | grep -E 'snap[0-9]+' | tail -n 1 | awk '{print $1}'`

  lxc restore $container $revision

  lxc delete $ephemeral

  lxc copy $container $ephemeral -e

  volant_device_add $ephemeral $host_dir $guest_dir
}

volant_device_add()
{
  local container=$1
  local host_dir=$2
  local guest_dir=$3

  lxc config device add $container $DEVICE_NAME disk source=$host_dir path=$guest_dir 1> /dev/null
}

volant_device_remove()
{
  local container=$1
  local host_dir=$2
  local guest_dir=$3

  lxc config device remove $container $DEVICE_NAME 1> /dev/null
}

volant_exists()
{
  local container=$1
  local name=$(lxc list $container --format csv -c n)

  test "$name" != ""
}

usage()
{
  cat <<EOF
Usage:

  volant <command> <arguments...> [options...]

Description:

  This 'volant' creates a container with immutable lxc. This container can be repeatedly tested.

Command:

  volant init

  volant delete

  volant start

  volant stop

  volant status

  volant run

  volant exec -- <arguments...>

  volant save

  volant commit

  volant rollback

  volant info

  volant list

Options:

  --version                 this version

  -h, --hellp               print this help text
EOF
}

version()
{
  echo "volant version $VERSION"
}

while true
do
  case "$1" in
    init|delete| \
    start|stop|status| \
    run|exec| \
    save|commit|rollback| \
    info|list)
                         COMMAND=$1; shift 1;;
    --)                  shift 1; ARGV=$*;;
    -h|--help)           usage && exit 0;;
    --version)           version && exit 0;;
    *)                   break ;;
  esac
done

if [ "$volantfile" = "" ]; then
  volantfile=Volantfile.sh
fi

if [ ! -e "$volantfile" ]; then
  echo "There is no '$volantfile' file."
  exit 1
fi

if [ ! -e .cache ]; then
  mkdir -p .cache
fi

if [ -e ".cache/name" ]; then
  container=`cat .cache/name`
else
  container=vm-`date | md5sum | awk '{print substr($1, 0, 9)}'`
  echo $container > .cache/name
fi

if [ -e ".cache/ephemeral" ]; then
  ephemeral=`cat .cache/ephemeral`
else
  ephemeral=vme-`date | md5sum | awk '{print substr($1, 0, 9)}'`
  echo $ephemeral > .cache/ephemeral
fi

if [ "$host_dir" = "" ]; then
  host_dir=`pwd`
fi

if [ "$guest_dir" = "" ]; then
  guest_dir=/volant
fi

if [ "$COMMAND" = "" ]; then
  usage && exit 1
fi

case "$COMMAND" in
  init)
    volant_init $container $ephemeral $host_dir $guest_dir $*
    ;;
  delete)
    volant_delete $container $ephemeral $host_dir $guest_dir
    ;;
  start)
    volant_start $container $ephemeral $host_dir $guest_dir
    ;;
  stop)
    volant_stop $container $ephemeral $host_dir $guest_dir
    ;;
  status)
    volant_status $container $ephemeral
    ;;
  run)
    volant_run $container $ephemeral $host_dir $guest_dir $volantfile
    ;;
  exec)
    volant_exec $container $ephemeral $host_dir $guest_dir $ARGV
    ;;
  save)
    volant_save $container $ephemeral $host_dir $guest_dir
    ;;
  commit)
    volant_commit $container $ephemeral $host_dir $guest_dir
    ;;
  rollback)
    volant_rollback $container $ephemeral $host_dir $guest_dir
    ;;
  info)
    lxc info $container
    ;;
  list)
    lxc list
    ;;
  *)
    usage && exit 1
    ;;
esac

